// Code generated by Icestudio 0.3.3-rc
// Wed, 29 Aug 2018 14:59:38 GMT

`default_nettype none

module main #(
 parameter vf285cb = 62,
 parameter vf5ea26 = 2
) (
 input vf7b76e,
 input v637cf3,
 input v8efee6,
 input ve9f3a5,
 input vclk,
 output v691a01,
 output vb648d8,
 output v4eb19d,
 output vefe53f,
 output vd9859d,
 output v8ac374
);
 localparam p13 = vf5ea26;
 localparam p18 = vf285cb;
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire [0:22] w6;
 wire [0:25] w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 wire [0:9] w14;
 wire [0:9] w15;
 wire [0:22] w16;
 wire w17;
 wire w19;
 wire w20;
 wire w21;
 assign v691a01 = w0;
 assign vb648d8 = w1;
 assign v4eb19d = w2;
 assign vefe53f = w3;
 assign vd9859d = w4;
 assign v8ac374 = w8;
 assign w9 = v637cf3;
 assign w10 = v8efee6;
 assign w11 = ve9f3a5;
 assign w12 = vf7b76e;
 assign w20 = vclk;
 assign w21 = vclk;
 assign w16 = w6;
 assign w21 = w20;
 vfa43b3 v264520 (
  .v88adbc(w0),
  .v2bfeec(w1),
  .vd7ac4a(w2),
  .v706449(w3),
  .vdb6628(w4),
  .v879a71(w7)
 );
 v429fbc vfce68a (
  .vdf4472(w16),
  .v32d6d9(w19)
 );
 v862d2a veb0799 (
  .v608bd9(w17)
 );
 ve304dc #(
  .va5f5b2(p18)
 ) v356241 (
  .v6f78a5(w5),
  .v61abb6(w6),
  .vd91ab0(w20)
 );
 vc1b79c v4a8318 (
  .vf38a91(w5),
  .v83f0cf(w6),
  .v71fb84(w7),
  .v8d0f6a(w8),
  .v1d0e6b(w14),
  .v4b76ef(w15),
  .v505933(w17),
  .v326812(w21)
 );
 v65c618 #(
  .v809ef8(p13)
 ) v20bed7 (
  .vb2afce(w9),
  .v25d2fb(w10),
  .v93497b(w11),
  .v1e2ad5(w12),
  .vad57cf(w14),
  .v8acdc4(w15),
  .v872666(w19)
 );
endmodule

module vfa43b3 (
 input [25:0] v879a71,
 output v88adbc,
 output v2bfeec,
 output vd7ac4a,
 output v706449,
 output vdb6628
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire [0:25] w5;
 assign v88adbc = w0;
 assign v2bfeec = w1;
 assign vd7ac4a = w2;
 assign v706449 = w3;
 assign vdb6628 = w4;
 assign w5 = v879a71;
 vfa43b3_vbebd3d vbebd3d (
  .VSync(w0),
  .HSync(w1),
  .Red(w2),
  .Green(w3),
  .Blue(w4),
  .RGBStr_i(w5)
 );
endmodule

module vfa43b3_vbebd3d (
 input [25:0] RGBStr_i,
 output VSync,
 output HSync,
 output Red,
 output Green,
 output Blue
);
 // @include PxsVGAComp.v
 
 
 //-- Instantiate  PxsVGAComp module.
 PxsVGAComp 
  PxsVGAComp1(
 			RGBStr_i,	// HSync, VSync, XCoord, YCoord, ActiveVideo, RGB(1:1:1)
             HSync,      // Horizontal sync out
             VSync,      // Vertical sync out
             Red,        // RED vga output
             Green,      // GREEN vga output
             Blue        // BLUE vga output
     );
 
endmodule

module v429fbc #(
 parameter vcbc232 = 640,
 parameter vd99934 = 480
) (
 input [22:0] vdf4472,
 output v32d6d9
);
 localparam p2 = vcbc232;
 localparam p3 = vd99934;
 wire w0;
 wire [0:22] w1;
 assign v32d6d9 = w0;
 assign w1 = vdf4472;
 v429fbc_v0c69d3 #(
  .width_screen(p2),
  .height_screen(p3)
 ) v0c69d3 (
  .endframe(w0),
  .VGAStr_i(w1)
 );
endmodule

module v429fbc_v0c69d3 #(
 parameter width_screen = 0,
 parameter height_screen = 0
) (
 input [22:0] VGAStr_i,
 output endframe
);
 // Alias in stream.
 `define XC 22:13
 `define YC 12:3
 
 // Check endframe.
 assign  endframe = ((VGAStr_i[`XC]==width_screen-1) && (VGAStr_i[`YC]==height_screen-1)) ? 1'b1 : 1'b0;
 
endmodule

module v862d2a (
 output v608bd9
);
 wire w0;
 assign v608bd9 = w0;
 v862d2a_v68c173 v68c173 (
  .v(w0)
 );
endmodule

module v862d2a_v68c173 (
 output v
);
 // Bit 0
 
 assign v = 1'b0;
endmodule

module ve304dc #(
 parameter va5f5b2 = 62
) (
 input vd91ab0,
 output v6f78a5,
 output [22:0] v61abb6
);
 localparam p8 = va5f5b2;
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire [0:22] w4;
 wire w5;
 wire [0:9] w6;
 wire [0:9] w7;
 assign w0 = vd91ab0;
 assign v6f78a5 = w1;
 assign v61abb6 = w4;
 v691d98 v76bfc0 (
  .v7964d5(w2),
  .v2fd51b(w3),
  .vcd0644(w4),
  .v372172(w5),
  .vf2cc41(w6),
  .v1f8542(w7)
 );
 vb78b9d #(
  .v8ad028(p8)
 ) v118e86 (
  .v7dbbbb(w0),
  .v9987be(w1),
  .v501546(w2),
  .vcbba55(w3),
  .v83ac33(w5),
  .v8a68e1(w6),
  .vf3ae84(w7)
 );
endmodule

module v691d98 (
 input v2fd51b,
 input v372172,
 input v7964d5,
 input [9:0] vf2cc41,
 input [9:0] v1f8542,
 output [22:0] vcd0644
);
 wire w0;
 wire w1;
 wire w2;
 wire [0:9] w3;
 wire [0:9] w4;
 wire [0:22] w5;
 assign w0 = v2fd51b;
 assign w1 = v372172;
 assign w2 = v7964d5;
 assign w3 = vf2cc41;
 assign w4 = v1f8542;
 assign vcd0644 = w5;
 v691d98_vbebd3d vbebd3d (
  .VSync(w0),
  .HSync(w1),
  .ActiveVideo(w2),
  .XCoord(w3),
  .YCoord(w4),
  .VGAStr(w5)
 );
endmodule

module v691d98_vbebd3d (
 input VSync,
 input HSync,
 input ActiveVideo,
 input [9:0] XCoord,
 input [9:0] YCoord,
 output [22:0] VGAStr
);
 // @include PxsStrVGAJoin.v
 
 
 //-- Instantiate PxsStrVGAJoin module.
 PxsStrVGAJoin 
 PxsStrVGAJoin1(
 	HSync,         // Horizontal sync out
     VSync,         // Vertical sync out
     XCoord,          // ScanX postion
     YCoord,          // ScanY position 
     ActiveVideo,
 	VGAStr	// HSync, VSync, XCoord, YCoord, ActiveVideo, RGB(1:1:1)
     );
 
endmodule

module vb78b9d #(
 parameter v8ad028 = 62
) (
 input v7dbbbb,
 output v9987be,
 output vcbba55,
 output v83ac33,
 output v501546,
 output [9:0] v8a68e1,
 output [9:0] vf3ae84
);
 localparam p1 = v8ad028;
 wire w0;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire [0:9] w6;
 wire [0:9] w7;
 assign w0 = v7dbbbb;
 assign v9987be = w2;
 assign vcbba55 = w3;
 assign v83ac33 = w4;
 assign v501546 = w5;
 assign v8a68e1 = w6;
 assign vf3ae84 = w7;
 vb78b9d_vb4a5e4 #(
  .FDivider(p1)
 ) vb4a5e4 (
  .clk(w0),
  .px_clk(w2),
  .vsync(w3),
  .hsync(w4),
  .activevideo(w5),
  .x_px(w6),
  .y_px(w7)
 );
endmodule

module vb78b9d_vb4a5e4 #(
 parameter FDivider = 0
) (
 input clk,
 output px_clk,
 output vsync,
 output hsync,
 output activevideo,
 output [9:0] x_px,
 output [9:0] y_px
);
 // @include VGASyncGen.v
 
 
 //-- Instantiate VgaSyncGenr module.
 VGASyncGen #(FDivider)
 VGASyncGen1 (
     clk,                // System clock.
     hsync,              // Horizontal syncro.
     vsync,              // Vertical syncro.
     x_px,               // Actual x pixel.
     y_px,               // Actual y pixel.
     activevideo,        // Active video.
     px_clk              // Pixel clock 31.5Mhz (PLL).
     );
 
endmodule

module vc1b79c (
 input vf38a91,
 input [22:0] v83f0cf,
 input v505933,
 input v326812,
 input v7f1d92,
 input [9:0] v4b76ef,
 input [9:0] v1d0e6b,
 output [25:0] v71fb84,
 output v8d0f6a
);
 wire [0:9] w0;
 wire [0:25] w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire [0:9] w7;
 wire [0:9] w8;
 wire [0:22] w9;
 wire [0:22] w10;
 wire [0:9] w11;
 wire [0:9] w12;
 wire w13;
 wire w14;
 wire w15;
 wire w16;
 wire w17;
 wire [0:9] w18;
 wire w19;
 wire [0:25] w20;
 wire [0:25] w21;
 wire [0:25] w22;
 wire w23;
 wire w24;
 wire [0:1] w25;
 wire w26;
 assign w0 = v1d0e6b;
 assign v71fb84 = w1;
 assign w2 = vf38a91;
 assign w6 = vf38a91;
 assign w9 = v83f0cf;
 assign w10 = v83f0cf;
 assign w11 = v4b76ef;
 assign w12 = v1d0e6b;
 assign w13 = vf38a91;
 assign w14 = vf38a91;
 assign w16 = v505933;
 assign w17 = v7f1d92;
 assign w18 = v4b76ef;
 assign v8d0f6a = w19;
 assign w24 = v326812;
 assign w6 = w2;
 assign w10 = w9;
 assign w12 = w0;
 assign w13 = w2;
 assign w13 = w6;
 assign w14 = w2;
 assign w14 = w6;
 assign w14 = w13;
 assign w18 = w11;
 assign w26 = w23;
 ve3c626 v505993 (
  .v1bb1ad(w6),
  .vca3201(w9),
  .v2761a5(w21)
 );
 v6331b1 vc13272 (
  .v7fc19d(w11),
  .vd2fdbd(w12),
  .vc82e98(w13),
  .v5f858c(w20),
  .v9bcfee(w22)
 );
 v1f7128 vebe209 (
  .v2761a5(w1),
  .va73a21(w7),
  .vb3f6f2(w8),
  .v1bb1ad(w14),
  .v879a71(w20)
 );
 v429fbc ve2ebeb (
  .vdf4472(w10),
  .v32d6d9(w23)
 );
 v185dce v9b34f7 (
  .vff0413(w15),
  .vb6af5d(w19),
  .v25d2dc(w24),
  .v0c83ba(w25)
 );
 v34789d v9901ef (
  .vd4c6e3(w0),
  .vb6af5d(w3),
  .v492e95(w4),
  .v6a7eea(w5),
  .v9633dc(w7),
  .v8a2116(w8),
  .v37cf5e(w15),
  .vff0413(w16),
  .v89e4bd(w17),
  .v53c5c2(w18),
  .v20491b(w25),
  .v25d2dc(w26)
 );
 v94c2eb vf24c0f (
  .v97af80(w2),
  .ve530ad(w3),
  .v77f5f0(w4),
  .v0c18ff(w5),
  .v7926bd(w21),
  .v9a7e5c(w22),
  .v5f4daf(w23)
 );
endmodule

module ve3c626 (
 input v1bb1ad,
 input [22:0] vca3201,
 output [25:0] v2761a5
);
 wire w0;
 wire [0:25] w1;
 wire [0:22] w2;
 assign w0 = v1bb1ad;
 assign v2761a5 = w1;
 assign w2 = vca3201;
 ve3c626_vbebd3d vbebd3d (
  .px_clk(w0),
  .RGBStr_o(w1),
  .VGAStr_i(w2)
 );
endmodule

module ve3c626_vbebd3d (
 input px_clk,
 input [22:0] VGAStr_i,
 output [25:0] RGBStr_o
);
 // @include PxsCourt.v
 
 
 //-- Instantiate PxsCourt module.
 PxsCourt
 PxsCourt1(
     px_clk,
     VGAStr_i,
     RGBStr_o
     );
 
endmodule

module v6331b1 #(
 parameter v66dc0a = 1'b0,
 parameter v293d83 = 20,
 parameter v702bcb = 610
) (
 input vc82e98,
 input [25:0] v9bcfee,
 input [9:0] v7fc19d,
 input [9:0] vd2fdbd,
 output [25:0] v5f858c
);
 localparam p7 = v293d83;
 localparam p8 = v702bcb;
 localparam p9 = v66dc0a;
 localparam p10 = v66dc0a;
 wire [0:25] w0;
 wire [0:9] w1;
 wire [0:9] w2;
 wire [0:25] w3;
 wire [0:25] w4;
 wire w5;
 wire w6;
 assign w1 = v7fc19d;
 assign w2 = vd2fdbd;
 assign w3 = v9bcfee;
 assign v5f858c = w4;
 assign w5 = vc82e98;
 assign w6 = vc82e98;
 assign w6 = w5;
 ve16a01 #(
  .v230ad7(p7),
  .v17aa3d(p9)
 ) ve710e0 (
  .va5d2a4(w0),
  .vcdfffd(w1),
  .v093318(w3),
  .v09d57a(w5)
 );
 ve16a01 #(
  .v230ad7(p8),
  .v17aa3d(p10)
 ) v68db7c (
  .v093318(w0),
  .vcdfffd(w2),
  .va5d2a4(w4),
  .v09d57a(w6)
 );
endmodule

module ve16a01 #(
 parameter v17aa3d = 1'b0,
 parameter v230ad7 = 100
) (
 input v09d57a,
 input [25:0] v093318,
 input [9:0] vcdfffd,
 output [25:0] va5d2a4
);
 localparam p2 = v17aa3d;
 localparam p5 = v230ad7;
 wire w0;
 wire [0:9] w1;
 wire [0:25] w3;
 wire [0:25] w4;
 assign w0 = v09d57a;
 assign w1 = vcdfffd;
 assign va5d2a4 = w3;
 assign w4 = v093318;
 ve16a01_v04c3fd #(
  .type(p2),
  .pos_offset(p5)
 ) v04c3fd (
  .px_clk(w0),
  .pos(w1),
  .RGBStr_o(w3),
  .RGBStr_i(w4)
 );
endmodule

module ve16a01_v04c3fd #(
 parameter type = 0,
 parameter pos_offset = 0
) (
 input px_clk,
 input [25:0] RGBStr_i,
 input [9:0] pos,
 output [25:0] RGBStr_o
);
 // @include PxsPlayer.v
 
 
 //-- Instantiate PxsPlayer module.
 PxsPlayer #(
 .type(type), 
 .pos_offset(pos_offset)
 ) 
 PxsPlayer1(
     px_clk,
     RGBStr_i,
     pos,
     RGBStr_o
 );
 
endmodule

module v1f7128 (
 input v1bb1ad,
 input [25:0] v879a71,
 input [9:0] va73a21,
 input [9:0] vb3f6f2,
 output [25:0] v2761a5
);
 wire [0:25] w0;
 wire w1;
 wire [0:25] w2;
 wire [0:9] w3;
 wire [0:9] w4;
 assign w0 = v879a71;
 assign w1 = v1bb1ad;
 assign v2761a5 = w2;
 assign w3 = va73a21;
 assign w4 = vb3f6f2;
 v1f7128_vbebd3d vbebd3d (
  .RGBStr_i(w0),
  .px_clk(w1),
  .RGBStr_o(w2),
  .pos_x(w3),
  .pos_y(w4)
 );
endmodule

module v1f7128_vbebd3d (
 input px_clk,
 input [25:0] RGBStr_i,
 input [9:0] pos_x,
 input [9:0] pos_y,
 output [25:0] RGBStr_o
);
 // @include PxsBall.v
 
 
 //-- Instantiate PxsBall module.
 PxsBall 
 PxsBall1(
     px_clk,
     RGBStr_i,
     pos_x,
     pos_y,
     RGBStr_o
     );
 
endmodule

module v185dce #(
 parameter v1239e1 = 17,
 parameter v04c545 = 19,
 parameter va166e2 = 15
) (
 input v25d2dc,
 input vff0413,
 input [1:0] v0c83ba,
 output vb6af5d,
 output va7d572
);
 localparam p1 = va166e2;
 localparam p3 = v1239e1;
 localparam p5 = v04c545;
 wire w0;
 wire w2;
 wire w4;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 wire w14;
 wire w15;
 wire w16;
 wire w17;
 wire w18;
 wire w19;
 wire w20;
 wire [0:1] w21;
 assign w0 = v25d2dc;
 assign w7 = v25d2dc;
 assign w8 = v25d2dc;
 assign w16 = vff0413;
 assign vb6af5d = w17;
 assign va7d572 = w18;
 assign w21 = v0c83ba;
 assign w7 = w0;
 assign w8 = w0;
 assign w8 = w7;
 assign w18 = w17;
 v435b29 #(
  .v100e1b(p1)
 ) va24b71 (
  .v0daa9e(w0),
  .v2efea4(w2)
 );
 v11a6f4 ve97e25 (
  .v0e28cb(w2),
  .v3ca442(w9),
  .vcbab45(w12)
 );
 v435b29 #(
  .v100e1b(p3)
 ) v4acc98 (
  .v2efea4(w4),
  .v0daa9e(w7)
 );
 v11a6f4 vb6ceeb (
  .v0e28cb(w4),
  .v3ca442(w10),
  .vcbab45(w13)
 );
 v435b29 #(
  .v100e1b(p5)
 ) vd2f8c7 (
  .v2efea4(w6),
  .v0daa9e(w8)
 );
 v11a6f4 v0266b4 (
  .v0e28cb(w6),
  .v3ca442(w11),
  .vcbab45(w14)
 );
 v2fa1b5 v04699a (
  .v0e28cb(w12),
  .v3ca442(w13),
  .vcbab45(w15)
 );
 v2fa1b5 vefd2d7 (
  .v3ca442(w14),
  .v0e28cb(w15),
  .vcbab45(w20)
 );
 v11a6f4 va84315 (
  .vcbab45(w17),
  .v3ca442(w19),
  .v0e28cb(w20)
 );
 v32200d v293735 (
  .v0e28cb(w16),
  .vcbab45(w19)
 );
 v185dce_v54dc66 v54dc66 (
  .ping(w9),
  .pong(w10),
  .goal(w11),
  .sound(w21)
 );
endmodule

module v185dce_v54dc66 (
 input [1:0] sound,
 output ping,
 output pong,
 output goal
);
 assign ping = (sound == 1) ? 1'b1 : 1'b0;
 assign pong = (sound == 2) ? 1'b1 : 1'b0;
 assign goal = (sound == 3) ? 1'b1 : 1'b0;
endmodule

module v435b29 #(
 parameter v100e1b = 22
) (
 input v0daa9e,
 output v2efea4
);
 localparam p2 = v100e1b;
 wire w0;
 wire w1;
 assign v2efea4 = w0;
 assign w1 = v0daa9e;
 v435b29_vac7386 #(
  .N(p2)
 ) vac7386 (
  .clk_out(w0),
  .clk_in(w1)
 );
endmodule

module v435b29_vac7386 #(
 parameter N = 0
) (
 input clk_in,
 output clk_out
);
 //-- Number of bits of the prescaler
 //parameter N = 22;
 
 //-- divisor register
 reg [N-1:0] divcounter;
 
 //-- N bit counter
 always @(posedge clk_in)
   divcounter <= divcounter + 1;
 
 //-- Use the most significant bit as output
 assign clk_out = divcounter[N-1];
endmodule

module v11a6f4 (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 v11a6f4_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

module v11a6f4_vf4938a (
 input a,
 input b,
 output c
);
 // AND logic gate
 
 assign c = a & b;
endmodule

module v2fa1b5 (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 v2fa1b5_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

module v2fa1b5_vf4938a (
 input a,
 input b,
 output c
);
 // OR logic gate
 
 assign c = a | b;
endmodule

module v32200d (
 input v0e28cb,
 output vcbab45
);
 wire w0;
 wire w1;
 assign w0 = v0e28cb;
 assign vcbab45 = w1;
 v32200d_vd54ca1 vd54ca1 (
  .a(w0),
  .c(w1)
 );
endmodule

module v32200d_vd54ca1 (
 input a,
 output c
);
 // NOT logic gate
 
 assign c = ~ a;
endmodule

module v34789d (
 input v25d2dc,
 input vff0413,
 input v89e4bd,
 input [9:0] v53c5c2,
 input [9:0] vd4c6e3,
 output vb6af5d,
 output v492e95,
 output v6a7eea,
 output [9:0] v9633dc,
 output [9:0] v8a2116,
 output v37cf5e,
 output [1:0] v20491b
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire [0:9] w4;
 wire [0:9] w5;
 wire [0:9] w6;
 wire [0:9] w7;
 wire w8;
 wire w9;
 wire [0:1] w10;
 wire w11;
 assign vb6af5d = w0;
 assign v492e95 = w1;
 assign v6a7eea = w2;
 assign w3 = vff0413;
 assign w4 = v53c5c2;
 assign w5 = vd4c6e3;
 assign v9633dc = w6;
 assign v8a2116 = w7;
 assign w8 = v89e4bd;
 assign v37cf5e = w9;
 assign v20491b = w10;
 assign w11 = v25d2dc;
 v34789d_v024d6c v024d6c (
  .reset_goals(w0),
  .goal_ply1(w1),
  .goal_ply2(w2),
  .reset(w3),
  .pos_ply1(w4),
  .pos_ply2(w5),
  .x_ball(w6),
  .y_ball(w7),
  .play(w8),
  .mute(w9),
  .sound(w10),
  .dyn_clk(w11)
 );
endmodule

module v34789d_v024d6c (
 input dyn_clk,
 input reset,
 input play,
 input [9:0] pos_ply1,
 input [9:0] pos_ply2,
 output reset_goals,
 output goal_ply1,
 output goal_ply2,
 output [9:0] x_ball,
 output [9:0] y_ball,
 output mute,
 output [1:0] sound
);
 // @include DynPong.v
 
 //-- Instantiate DynPong module.
 DynPong
 DynPong1(
     dyn_clk,
     reset,
     play,
     pos_ply1,
     pos_ply2,
     reset_goals,
     goal_ply1,
     goal_ply2,
     x_ball,
     y_ball,
     mute,
     sound
 );
endmodule

module v94c2eb (
 input v97af80,
 input [25:0] v7926bd,
 input v5f4daf,
 input ve530ad,
 input v77f5f0,
 input v0c18ff,
 output [25:0] v9a7e5c
);
 wire w0;
 wire w1;
 wire [0:25] w2;
 wire [0:25] w3;
 wire [0:9] w4;
 wire [0:9] w5;
 wire [0:9] w6;
 wire [0:9] w7;
 wire w8;
 wire [0:25] w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 wire w14;
 assign w0 = v97af80;
 assign w1 = v97af80;
 assign v9a7e5c = w2;
 assign w3 = v7926bd;
 assign w8 = ve530ad;
 assign w10 = v5f4daf;
 assign w11 = v77f5f0;
 assign w12 = v0c18ff;
 assign w13 = ve530ad;
 assign w14 = v5f4daf;
 assign w1 = w0;
 assign w7 = w6;
 assign w13 = w8;
 assign w14 = w10;
 v94c2eb_ve6be24 ve6be24 (
  .pos_xply1(w4),
  .pos_xply2(w5),
  .pos_y(w6)
 );
 v7a42dc vc46c29 (
  .v97af80(w0),
  .v7926bd(w3),
  .v0e20f2(w4),
  .v370d02(w7),
  .ve530ad(w8),
  .v9a7e5c(w9),
  .vfc3d41(w10),
  .v77f5f0(w11)
 );
 v7a42dc vbb6aaf (
  .v97af80(w1),
  .v9a7e5c(w2),
  .v0e20f2(w5),
  .v370d02(w6),
  .v7926bd(w9),
  .v77f5f0(w12),
  .ve530ad(w13),
  .vfc3d41(w14)
 );
endmodule

module v94c2eb_ve6be24 (
 output [9:0] pos_xply1,
 output [9:0] pos_xply2,
 output [9:0] pos_y
);
 parameter width_screen  = 640;
 parameter width_digit   = 30;
 parameter separator     = 5;
 parameter width_counter = 2*width_digit + separator;
 parameter offset        = 20;
 
 assign pos_xply1 = width_screen/2 - width_counter - offset;
 assign pos_xply2 = width_screen/2 + offset;
 assign pos_y = offset;
endmodule

module v7a42dc #(
 parameter v36c557 = 3'b111
) (
 input v97af80,
 input [25:0] v7926bd,
 input [9:0] v0e20f2,
 input [9:0] v370d02,
 input vfc3d41,
 input ve530ad,
 input v77f5f0,
 output [25:0] v9a7e5c
);
 localparam p4 = v36c557;
 localparam p17 = v36c557;
 wire w0;
 wire [0:25] w1;
 wire w2;
 wire [0:25] w3;
 wire w5;
 wire [0:9] w6;
 wire [0:9] w7;
 wire [0:9] w8;
 wire [0:9] w9;
 wire [0:9] w10;
 wire [0:9] w11;
 wire [0:25] w12;
 wire w13;
 wire w14;
 wire w15;
 wire w16;
 wire w18;
 assign w0 = v97af80;
 assign w2 = v97af80;
 assign v9a7e5c = w3;
 assign w7 = v0e20f2;
 assign w8 = v370d02;
 assign w12 = v7926bd;
 assign w13 = vfc3d41;
 assign w14 = vfc3d41;
 assign w15 = ve530ad;
 assign w16 = v77f5f0;
 assign w18 = ve530ad;
 assign w2 = w0;
 assign w11 = w10;
 assign w14 = w13;
 assign w18 = w15;
 v7a42dc_ve6be24 ve6be24 (
  .posx_digit2(w6),
  .pos_x(w7),
  .pos_y(w8),
  .posx_digit1(w9),
  .posy_counter(w10)
 );
 va8fbff #(
  .v30d48c(p4)
 ) v2f1dbf (
  .v608cee(w0),
  .vb27b50(w1),
  .v25ba7f(w5),
  .v60ac98(w6),
  .v00b9f7(w11),
  .v8058b8(w12),
  .vf49060(w13),
  .va3407d(w15),
  .v55cd3b(w16)
 );
 va8fbff #(
  .v30d48c(p17)
 ) v648bcc (
  .v8058b8(w1),
  .v608cee(w2),
  .vb27b50(w3),
  .v55cd3b(w5),
  .v60ac98(w9),
  .v00b9f7(w10),
  .vf49060(w14),
  .va3407d(w18)
 );
endmodule

module v7a42dc_ve6be24 (
 input [9:0] pos_x,
 input [9:0] pos_y,
 output [9:0] posx_digit2,
 output [9:0] posx_digit1,
 output [9:0] posy_counter
);
 parameter width_digit = 30;
 parameter separation = 5;
 
 assign posx_digit1 = pos_x;
 assign posx_digit2 = pos_x + width_digit + separation;
 assign posy_counter = pos_y;
 
endmodule

module va8fbff #(
 parameter v30d48c = 3'b111
) (
 input v608cee,
 input [25:0] v8058b8,
 input [9:0] v60ac98,
 input [9:0] v00b9f7,
 input vf49060,
 input va3407d,
 input v55cd3b,
 input v886ec6,
 output [25:0] vb27b50,
 output v25ba7f
);
 localparam p9 = v30d48c;
 wire [0:25] w0;
 wire [0:25] w1;
 wire [0:9] w2;
 wire [0:9] w3;
 wire [0:3] w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w10;
 wire w11;
 assign w0 = v8058b8;
 assign vb27b50 = w1;
 assign w2 = v60ac98;
 assign w3 = v00b9f7;
 assign w5 = va3407d;
 assign w6 = v55cd3b;
 assign w7 = vf49060;
 assign w8 = v608cee;
 assign w10 = v886ec6;
 assign v25ba7f = w11;
 va8fbff_vde8482 vde8482 (
  .number(w4),
  .reset(w5),
  .inc(w6),
  .clk(w7),
  .dec(w10),
  .carry(w11)
 );
 v63b737 #(
  .va3cee2(p9)
 ) v6add03 (
  .v8058b8(w0),
  .vb27b50(w1),
  .v60ac98(w2),
  .v00b9f7(w3),
  .v422330(w4),
  .v608cee(w8)
 );
endmodule

module va8fbff_vde8482 (
 input clk,
 input reset,
 input inc,
 input dec,
 output [3:0] number,
 output carry
);
 //@include DynNumber.v
 
 DynNumber 
 DynNumber1(
 clk,
 reset,
 inc,
 dec,
 number,
 carry
 );
endmodule

module v63b737 #(
 parameter va3cee2 = 3'b111
) (
 input v608cee,
 input [25:0] v8058b8,
 input [9:0] v60ac98,
 input [9:0] v00b9f7,
 input [3:0] v422330,
 output [25:0] vb27b50
);
 localparam p6 = va3cee2;
 wire [0:9] w0;
 wire [0:9] w1;
 wire w2;
 wire [0:25] w3;
 wire [0:25] w4;
 wire [0:3] w5;
 assign w0 = v60ac98;
 assign w1 = v00b9f7;
 assign w2 = v608cee;
 assign w3 = v8058b8;
 assign vb27b50 = w4;
 assign w5 = v422330;
 v63b737_vb05e80 #(
  .color(p6)
 ) vb05e80 (
  .pos_x(w0),
  .pos_y(w1),
  .px_clk(w2),
  .RGBStr_i(w3),
  .RGBStr_o(w4),
  .number(w5)
 );
endmodule

module v63b737_vb05e80 #(
 parameter color = 0
) (
 input px_clk,
 input [25:0] RGBStr_i,
 input [9:0] pos_x,
 input [9:0] pos_y,
 input [3:0] number,
 output [25:0] RGBStr_o
);
 // @include PxsDigit.v
 
 //-- Instantiate PxsDigit module.
 PxsDigit
 #(
     color
 )
 PxsDigit1
 (
     px_clk,
     RGBStr_i,
     pos_x,
     pos_y,
     number,
     RGBStr_o
 );
 
endmodule

module v65c618 #(
 parameter v809ef8 = 1
) (
 input v872666,
 input v1e2ad5,
 input vb2afce,
 input v25d2fb,
 input v93497b,
 output [9:0] v8acdc4,
 output [9:0] vad57cf
);
 localparam p7 = v809ef8;
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire [0:9] w4;
 wire [0:9] w5;
 wire w6;
 assign w0 = v1e2ad5;
 assign w1 = vb2afce;
 assign w2 = v25d2fb;
 assign w3 = v93497b;
 assign v8acdc4 = w4;
 assign vad57cf = w5;
 assign w6 = v872666;
 v65c618_v7feea9 #(
  .speed(p7)
 ) v7feea9 (
  .inc_ply1(w0),
  .dec_ply1(w1),
  .inc_ply2(w2),
  .dec_ply2(w3),
  .pos_ply1(w4),
  .pos_ply2(w5),
  .clk(w6)
 );
endmodule

module v65c618_v7feea9 #(
 parameter speed = 0
) (
 input clk,
 input inc_ply1,
 input dec_ply1,
 input inc_ply2,
 input dec_ply2,
 output [9:0] pos_ply1,
 output [9:0] pos_ply2
);
 // Control game by buttons.
 reg [9:0] reg1 = 100;
 reg [9:0] reg2 = 100;
 
 assign pos_ply1 = reg1;
 assign pos_ply2 = reg2;
 
 always @(posedge clk)
 begin
    if (inc_ply1) reg1 <= reg1 + speed;
    if (dec_ply1) reg1 <= reg1 - speed;
    if (inc_ply2) reg2 <= reg2 + speed;
    if (dec_ply2) reg2 <= reg2 - speed;
    if (reg1 < 5) reg1 <= 5; 
    if (reg2 < 5) reg2 <= 5;
    if (reg1 > 470) reg1 <= 470;
    if (reg2 > 470) reg2 <= 470;
 end
 
endmodule
